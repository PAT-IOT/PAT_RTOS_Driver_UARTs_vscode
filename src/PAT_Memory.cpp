#include <Arduino.h>
#include <Preferences.h>
#include "PAT_Memory.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Preferences preferences;
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// constructor
class_nonVolatileMemory::class_nonVolatileMemory() {
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void class_nonVolatileMemory::init(const char* nameSpace) {
  //preferences.begin(nameSpace, false);
  //preferences.begin("my-app", false);
  // EEPROM.begin(512); // Initialize EEPROM with 512 bytes
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void class_nonVolatileMemory::write(const char* key, String str) {
  // preferences.begin("nvs", false);
  // preferences.putString(key, str);
  // preferences.end();
}

void class_nonVolatileMemory::write(const char* key, int value) {
  // preferences.begin("nvs", false);
  // preferences.putInt(key, value);
  // preferences.end();
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int class_nonVolatileMemory::read(const char* key, String& str) {
  // preferences.begin("nvs", true);
  // str = preferences.getString(key, "");
  // preferences.end();
  // return str.length();  // Return the length of the string read from preferences
  return 1;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void class_nonVolatileMemory::update(const char* key, int value) {
  //preferences.putInt(key, value);
  //if(preferences.getString(key.c_str(), "") != ""){
  //preferences.putString(key.c_str(), value.c_str());
  //int existing = EEPROM.read(address); // Read current value at address
  //if (existing != value){
  //    EEPROM.write(address, value); // Write new value if it is different
  //    EEPROM.commit(); // Commit the write to the EEPROM
  //}
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
