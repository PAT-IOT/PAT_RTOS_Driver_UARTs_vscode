#include <Arduino.h>
#include <PAT_Task_PushButton.h>

// #include "PAT_JSON.h"

//extern class_UserBuffer ubuf;
//////////////////////////////////////////////////////////////////////////Config////////////////////////////////////////////////////////////////////////////////////
#define _PUSHBUTTON_DEBOUNCE_DELAY 500 
const int PUSHBUTTON0_PIN = 2;
const int PUSHBUTTON1_PIN = 15;
const int PUSHBUTTON2_PIN = 13;
const int PUSHBUTTON3_PIN = 4;
//////////////////////////////////////////////////////////////////////Class Definitions/////////////////////////////////////////////////////////////////////////////////////////
class_pushButton pushButton[] = {
  class_pushButton(PUSHBUTTON0_PIN,pushButton0_handel),
  class_pushButton(PUSHBUTTON1_PIN,pushButton1_handel),
  class_pushButton(PUSHBUTTON2_PIN,pushButton2_handel),
  class_pushButton(PUSHBUTTON3_PIN,pushButton3_handel)
  };
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void task_PushButton(void) {
  /*for (int i = 0; i < 4; i++)
  {
    if (pushButton[i].cunter)
    {
      pushButton[i].cunter = 0;
      ubuf.relay[i] = !ubuf.relay[i];
    }
  }*/
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  class_pushButton::class_pushButton(uint8_t pin, void (*routine)(void), uint8_t state, uint8_t mode)
  : pin(pin), handel(routine), state(state), mode(mode), cunter(0) {
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void class_pushButton::init() {
  pinMode(pin, state);
  attachInterrupt(digitalPinToInterrupt(this->pin), this->handel, this->mode);
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 void pushButton0_handel(void) {  
unsigned static long lastDebounceTime = 0;
  if ((millis() - lastDebounceTime) > _PUSHBUTTON_DEBOUNCE_DELAY) {
      lastDebounceTime = millis();
            pushButton[0].cunter++;
    }
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void pushButton1_handel(void) {
unsigned static long lastDebounceTime = 0;
  if ((millis() - lastDebounceTime) > _PUSHBUTTON_DEBOUNCE_DELAY) {
      lastDebounceTime = millis();
            pushButton[1].cunter++;
    }
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void pushButton2_handel(void) {
unsigned static long lastDebounceTime = 0;
  if ((millis() - lastDebounceTime) > _PUSHBUTTON_DEBOUNCE_DELAY) {
      lastDebounceTime = millis();
            pushButton[2].cunter++;
    }
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void pushButton3_handel(void) {
unsigned static long lastDebounceTime = 0;
  if ((millis() - lastDebounceTime) > _PUSHBUTTON_DEBOUNCE_DELAY) {
      lastDebounceTime = millis();
            pushButton[3].cunter++;
    }
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




